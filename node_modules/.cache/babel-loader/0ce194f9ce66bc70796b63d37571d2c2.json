{"ast":null,"code":"import { FETCH_NEWS, UPDATE_NEWS, SHOW_LOADING, SEARCH_NEWS, CHANGE_PAGE, SWITCH_LANGUAGE } from './actionTypes';\nimport axios from 'axios';\nimport rtlDetect from 'rtl-detect';\nexport const fetchNews = (pageSize, currPage, language = 'en') => {\n  return dispatch => {\n    dispatch(showLoading(true));\n    const languageToCountryMap = {\n      'en': 'us',\n      'ar': 'eg'\n    };\n    return axios.get('https://newsapi.org/v2/top-headlines', {\n      'params': {\n        'country': languageToCountryMap[language],\n        'apiKey': '758729489d09410b97af1e815878c9ec',\n        'pageSize': pageSize,\n        'page': currPage,\n        language: language\n      }\n    }).then(res => {\n      var data = res.data;\n\n      if (data && data.status === 'ok') {\n        dispatch(updateNews(data));\n        dispatch(showLoading(false));\n        dispatch({\n          type: FETCH_NEWS,\n          fetchFailed: false,\n          isFetching: true\n        });\n      }\n    }).catch(err => {\n      console.log('%c' + err, 'color: red');\n      dispatch(showLoading(false));\n      dispatch({\n        type: FETCH_NEWS,\n        fetchFailed: true,\n        isFetching: false\n      });\n    });\n  };\n};\nexport const switchLanguage = language => ({\n  type: SWITCH_LANGUAGE,\n  currentLanguage: language,\n  direction: rtlDetect.isRtlLang(language) ? 'rtl' : 'ltr'\n});\nexport const updateNews = data => ({\n  type: UPDATE_NEWS,\n  articles: data.articles,\n  totalResults: data.totalResults\n});\nexport const showLoading = show => ({\n  type: SHOW_LOADING,\n  showLoading: show\n});\nexport const searchNews = text => ({\n  type: SEARCH_NEWS,\n  searchInputText: text\n});\nexport const changePage = index => ({\n  type: CHANGE_PAGE,\n  currPage: index\n});","map":{"version":3,"sources":["/Users/allenchum/Projects/easy-news-ts/src/redux/actions.ts"],"names":["FETCH_NEWS","UPDATE_NEWS","SHOW_LOADING","SEARCH_NEWS","CHANGE_PAGE","SWITCH_LANGUAGE","axios","rtlDetect","fetchNews","pageSize","currPage","language","dispatch","showLoading","languageToCountryMap","get","then","res","data","status","updateNews","type","fetchFailed","isFetching","catch","err","console","log","switchLanguage","currentLanguage","direction","isRtlLang","articles","totalResults","show","searchNews","text","searchInputText","changePage","index"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,YAAlC,EAAgDC,WAAhD,EAA6DC,WAA7D,EAA0EC,eAA1E,QAAiG,eAAjG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAKA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAmBC,QAAnB,EAAqCC,QAAmB,GAAG,IAA3D,KAAoE;AACzF,SAAQC,QAAD,IAA2D;AAC9DA,IAAAA,QAAQ,CAACC,WAAW,CAAC,IAAD,CAAZ,CAAR;AACA,UAAMC,oBAAoB,GAAG;AACzB,YAAM,IADmB;AAEzB,YAAM;AAFmB,KAA7B;AAIA,WAAOR,KAAK,CAACS,GAAN,CAAU,sCAAV,EAAkD;AAAE,gBAAU;AAAE,mBAAWD,oBAAoB,CAACH,QAAD,CAAjC;AAA6C,kBAAU,kCAAvD;AAA2F,oBAAYF,QAAvG;AAAiH,gBAAQC,QAAzH;AAAmIC,QAAAA,QAAQ,EAAEA;AAA7I;AAAZ,KAAlD,EAAyNK,IAAzN,CAA+NC,GAAD,IAAS;AAC1O,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;;AACA,UAAIA,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,IAA5B,EAAkC;AAC9BP,QAAAA,QAAQ,CAACQ,UAAU,CAACF,IAAD,CAAX,CAAR;AACAN,QAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,QAAAA,QAAQ,CAAC;AACLS,UAAAA,IAAI,EAAErB,UADD;AAELsB,UAAAA,WAAW,EAAE,KAFR;AAGLC,UAAAA,UAAU,EAAE;AAHP,SAAD,CAAR;AAKH;AACJ,KAXM,EAWJC,KAXI,CAWGC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,GAAnB,EAAwB,YAAxB;AACAb,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAErB,UADD;AAELsB,QAAAA,WAAW,EAAE,IAFR;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAD,CAAR;AAKH,KAnBM,CAAP;AAoBH,GA1BD;AA2BH,CA5BM;AA8BP,OAAO,MAAMK,cAAc,GAAIjB,QAAD,KAAuB;AACjDU,EAAAA,IAAI,EAAEhB,eAD2C;AAEjDwB,EAAAA,eAAe,EAAElB,QAFgC;AAGjDmB,EAAAA,SAAS,EAAEvB,SAAS,CAACwB,SAAV,CAAoBpB,QAApB,IAAgC,KAAhC,GAAwC;AAHF,CAAvB,CAAvB;AAMP,OAAO,MAAMS,UAAU,GAAIF,IAAD,KAAgB;AACtCG,EAAAA,IAAI,EAAEpB,WADgC;AAEtC+B,EAAAA,QAAQ,EAAEd,IAAI,CAACc,QAFuB;AAGtCC,EAAAA,YAAY,EAAEf,IAAI,CAACe;AAHmB,CAAhB,CAAnB;AAMP,OAAO,MAAMpB,WAAW,GAAIqB,IAAD,KAAoB;AAC3Cb,EAAAA,IAAI,EAAEnB,YADqC;AAE3CW,EAAAA,WAAW,EAAEqB;AAF8B,CAApB,CAApB;AAKP,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAmB;AACzCf,EAAAA,IAAI,EAAElB,WADmC;AAEzCkC,EAAAA,eAAe,EAAED;AAFwB,CAAnB,CAAnB;AAKP,OAAO,MAAME,UAAU,GAAIC,KAAD,KAAoB;AAC1ClB,EAAAA,IAAI,EAAEjB,WADoC;AAE1CM,EAAAA,QAAQ,EAAE6B;AAFgC,CAApB,CAAnB","sourcesContent":["import { FETCH_NEWS, UPDATE_NEWS, SHOW_LOADING, SEARCH_NEWS, CHANGE_PAGE, SWITCH_LANGUAGE } from './actionTypes';\nimport axios from 'axios';\nimport rtlDetect from 'rtl-detect';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from './reducers';\nimport { INewsActions } from './reducers/news';\n\nexport const fetchNews = (pageSize: number, currPage: number, language: 'en'|'ar' = 'en') => {\n    return (dispatch:ThunkDispatch<AppState, null, INewsActions >) => {\n        dispatch(showLoading(true));\n        const languageToCountryMap = {\n            'en': 'us',\n            'ar': 'eg',\n        }\n        return axios.get('https://newsapi.org/v2/top-headlines', { 'params': { 'country': languageToCountryMap[language], 'apiKey': '758729489d09410b97af1e815878c9ec', 'pageSize': pageSize, 'page': currPage, language: language } }).then((res) => {\n            var data = res.data;\n            if (data && data.status === 'ok') {\n                dispatch(updateNews(data));\n                dispatch(showLoading(false))\n                dispatch({\n                    type: FETCH_NEWS,\n                    fetchFailed: false,\n                    isFetching: true\n                })\n            }\n        }).catch((err) => {\n            console.log('%c' + err, 'color: red');\n            dispatch(showLoading(false))\n            dispatch({\n                type: FETCH_NEWS,\n                fetchFailed: true,\n                isFetching: false\n            })\n        })\n    }\n}\n\nexport const switchLanguage = (language: string) => ({\n    type: SWITCH_LANGUAGE,\n    currentLanguage: language,\n    direction: rtlDetect.isRtlLang(language) ? 'rtl' : 'ltr'\n});\n\nexport const updateNews = (data: any) => ({\n    type: UPDATE_NEWS,\n    articles: data.articles,\n    totalResults: data.totalResults,\n});\n\nexport const showLoading = (show: boolean) => ({\n    type: SHOW_LOADING,\n    showLoading: show\n});\n\nexport const searchNews = (text: string) => ({\n    type: SEARCH_NEWS,\n    searchInputText: text\n});\n\nexport const changePage = (index: number) => ({\n    type: CHANGE_PAGE,\n    currPage: index\n});"]},"metadata":{},"sourceType":"module"}