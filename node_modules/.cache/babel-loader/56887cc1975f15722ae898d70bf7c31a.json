{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allenchum/Projects/easy-news-ts/src/components/PageIndicator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changePage, fetchNews } from '../redux/actions';\nimport '../styles/page-indicator.scss';\n\nconst PageIndicator = ({\n  pageSize = 10\n}) => {\n  _s();\n\n  const {\n    totalResults,\n    currPage,\n    direction\n  } = useSelector(({\n    news,\n    language\n  }) => {\n    var _news$totalResults, _news$currPage;\n\n    return {\n      totalResults: (_news$totalResults = news.totalResults) !== null && _news$totalResults !== void 0 ? _news$totalResults : 0,\n      currPage: (_news$currPage = news.currPage) !== null && _news$currPage !== void 0 ? _news$currPage : 1,\n      direction: language.direction\n    };\n  });\n  const dispatch = useDispatch();\n  const pagesLength = useMemo(() => Math.min(Math.ceil(totalResults / pageSize), 10), [totalResults, pageSize]);\n  const dispatchChangePage = useCallback(target => {\n    dispatch(changePage(target));\n    dispatch(fetchNews(pageSize, target));\n  }, [dispatch, pageSize]);\n  const handleChangePage = useCallback(target => {\n    if (target === 'next') {\n      if (currPage < pagesLength) {\n        dispatchChangePage(currPage + 1);\n      }\n    } else if (target === 'prev') {\n      if (currPage !== 1) {\n        dispatchChangePage(currPage - 1);\n      }\n    } else if (typeof target === 'number') {\n      dispatchChangePage(target);\n    }\n  }, [currPage, pagesLength, dispatchChangePage]);\n  const start = useMemo(() => currPage === 1 ? currPage //First page\n  : currPage + 2 > pagesLength && pagesLength > 2 ? pagesLength - 2 //Last pages\n  : currPage - 1 //Middle pages\n  , [currPage, pagesLength]);\n  const pagesArr = useMemo(() => pagesLength > 3 ? [start, start + 1, start + 2] : Array.from(Array(pagesLength), (x, index) => start + index), [pagesLength, start]);\n  const mid = useMemo(() => pagesArr.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: num === currPage ? \"page-indic active\" : \"page-indic\",\n    onClick: () => handleChangePage(num),\n    children: num\n  }, num, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this)), [pagesArr, currPage, handleChangePage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-indicator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `page-indic ${direction === 'ltr' ? 'arrow-left' : 'arrow-right'}`,\n      onClick: () => handleChangePage('prev')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), mid, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `page-indic ${direction === 'ltr' ? 'arrow-right' : 'arrow-left'}`,\n      onClick: () => handleChangePage('next')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageIndicator, \"wELYQjFfDej/FYWOBXuUGB0vgV0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PageIndicator;\nexport default PageIndicator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageIndicator\");","map":{"version":3,"sources":["/Users/allenchum/Projects/easy-news-ts/src/components/PageIndicator.tsx"],"names":["React","useMemo","useCallback","useSelector","useDispatch","changePage","fetchNews","PageIndicator","pageSize","totalResults","currPage","direction","news","language","dispatch","pagesLength","Math","min","ceil","dispatchChangePage","target","handleChangePage","start","pagesArr","Array","from","x","index","mid","map","num"],"mappings":"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","sourcesContent":["import React, { FC, useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changePage, fetchNews } from '../redux/actions';\nimport { AppState } from '../redux/reducers';\n\nimport '../styles/page-indicator.scss';\n\ninterface IPageIndicator {\n    pageSize: number\n}\n\nconst PageIndicator: FC<IPageIndicator> = ({ pageSize = 10 }) => {\n    const { totalResults, currPage, direction } = useSelector(({news, language}:AppState) => ({\n        totalResults: news.totalResults ?? 0,\n        currPage: news.currPage ?? 1,\n        direction: language.direction\n    }));\n    const dispatch = useDispatch();\n\n    const pagesLength = useMemo(() =>\n        Math.min(Math.ceil(totalResults / pageSize), 10)\n        , [totalResults, pageSize]);\n\n    const dispatchChangePage = useCallback((target) => {\n        dispatch(changePage(target));\n        dispatch(fetchNews(pageSize, target))\n    }, [dispatch, pageSize]);\n\n    const handleChangePage = useCallback((target: string | number) => {\n        if (target === 'next') {\n            if (currPage < pagesLength) {\n                dispatchChangePage(currPage + 1);\n            }\n        } else if (target === 'prev') {\n            if (currPage !== 1) {\n                dispatchChangePage(currPage - 1);\n            }\n        } else if (typeof target === 'number') {\n            dispatchChangePage(target);\n        }\n    }, [currPage, pagesLength, dispatchChangePage]);\n\n    const start = useMemo(() => (\n        currPage === 1 ?\n            currPage  //First page\n            : ((currPage + 2 > pagesLength) && (pagesLength > 2)) ?\n                pagesLength - 2 //Last pages\n                : currPage - 1 //Middle pages\n    ), [currPage, pagesLength]);\n\n    const pagesArr = useMemo(() => \n        (pagesLength > 3) ? [start, start + 1, start + 2] : Array.from(Array(pagesLength), (x, index) => start + index)\n        , [pagesLength, start]);\n\n    const mid = useMemo(()=>pagesArr.map((num) =>\n        <div className={num === currPage ? \"page-indic active\" : \"page-indic\"} key={num} onClick={() => handleChangePage(num)}>{num}</div>\n    ),[pagesArr, currPage, handleChangePage]);\n\n    return (\n        <div className=\"page-indicator-container\">\n            <div className={`page-indic ${(direction === 'ltr')?'arrow-left':'arrow-right'}`} onClick={() => handleChangePage('prev')}></div>\n            {mid}\n            <div className={`page-indic ${(direction === 'ltr')?'arrow-right':'arrow-left'}`} onClick={() => handleChangePage('next')}></div>\n        </div>\n    )\n}\n\n\n\nexport default PageIndicator;\n"]},"metadata":{},"sourceType":"module"}