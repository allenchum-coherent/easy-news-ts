{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/allenchum/Projects/easy-news-ts/src/components/NewsCard.tsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Card, Avatar, Typography } from 'antd';\nimport LazyLoad from 'react-lazyload';\nimport './../styles/card.scss';\nconst {\n  Meta\n} = Card;\nconst {\n  Title,\n  Paragraph\n} = Typography;\n\nconst NewsCard = props => {\n  const {\n    source,\n    title,\n    description,\n    url,\n    urlToImage,\n    publishedAt\n  } = props.data;\n  const sourceName = source.name;\n\n  const redirectTo = url => {\n    window.location.href = url;\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"NewsCard-item\",\n    onClick: () => redirectTo(url),\n    style: {\n      width: 300\n    },\n    cover: /*#__PURE__*/_jsxDEV(LazyLoad, {\n      height: 190,\n      once: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"NewsCard-image\",\n        alt: urlToImage || 'no_image',\n        src: urlToImage || '/images/no_image.jpg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: sourceName.slice(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this),\n      title: sourceName !== null && sourceName !== void 0 ? sourceName : '',\n      description: publishedAt ? moment(publishedAt).format('YYYY-MM-DD h:mm') : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      level: 4,\n      ellipsis: {\n        rows: 1,\n        expandable: false\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      ellipsis: {\n        rows: 6,\n        expandable: false\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = NewsCard;\nexport default NewsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCard\");","map":{"version":3,"sources":["/Users/allenchum/Projects/easy-news-ts/src/components/NewsCard.tsx"],"names":["React","moment","Card","Avatar","Typography","LazyLoad","Meta","Title","Paragraph","NewsCard","props","source","title","description","url","urlToImage","publishedAt","data","sourceName","name","redirectTo","window","location","href","width","slice","format","rows","expandable"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,MAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,uBAAP;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWJ,IAAjB;AACA,MAAM;AAAEK,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAuBJ,UAA7B;;AAoBA,MAAMK,QAA2B,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,GAA9B;AAAmCC,IAAAA,UAAnC;AAA+CC,IAAAA;AAA/C,MAA+DN,KAAK,CAACO,IAA3E;AACA,QAAMC,UAAU,GAAGP,MAAM,CAACQ,IAA1B;;AAEA,QAAMC,UAAU,GAAIN,GAAD,IAAiB;AAChCO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBT,GAAvB;AACA;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,OAAO,EAAE,MAAMM,UAAU,CAACN,GAAD,CAF7B;AAGI,IAAA,KAAK,EAAE;AAACU,MAAAA,KAAK,EAAE;AAAR,KAHX;AAII,IAAA,KAAK,eACD,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE,GAAlB;AAAuB,MAAA,IAAI,MAA3B;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAET,UAAU,IAAI,UAFvB;AAGI,QAAA,GAAG,EAAEA,UAAU,IAAI;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALR;AAAA,4BAcI,QAAC,IAAD;AACI,MAAA,MAAM,eAAE,QAAC,MAAD;AAAA,kBAASG,UAAU,CAACO,KAAX,CAAiB,CAAjB,EAAoB,CAApB;AAAT;AAAA;AAAA;AAAA;AAAA,cADZ;AAEI,MAAA,KAAK,EAAEP,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,EAFzB;AAGI,MAAA,WAAW,EAAEF,WAAW,GAAGf,MAAM,CAACe,WAAD,CAAN,CAAoBU,MAApB,CAA2B,iBAA3B,CAAH,GAAmD;AAH/E;AAAA;AAAA;AAAA;AAAA,YAdJ,eAmBI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAiB,MAAA,QAAQ,EAAE;AAACC,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,UAAU,EAAC;AAApB,OAA3B;AAAA,gBAAwDhB;AAAxD;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAACe,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,UAAU,EAAC;AAApB,OAArB;AAAA,gBAAkDf;AAAlD;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAjCD;;KAAMJ,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { FC } from 'react';\nimport moment from 'moment';\nimport { Card, Avatar, Typography } from 'antd';\nimport LazyLoad from 'react-lazyload';\n\nimport './../styles/card.scss';\n\nconst { Meta } = Card;\nconst { Title, Paragraph } = Typography;\n\nexport interface NewsData {\n    author: string;\n    content: string;\n    description: string;\n    publishedAt: string;\n    source: {\n        id: string;\n        name: string;\n    };\n    title: string;\n    url: string;\n    urlToImage: string;\n}\n\ninterface NewsCardProps {\n    data: NewsData;\n}\n\nconst NewsCard: FC<NewsCardProps> = (props) => {\n    const { source, title, description, url, urlToImage, publishedAt } = props.data;\n    const sourceName = source.name;\n\n    const redirectTo = (url: string) => {\n        window.location.href = url;\n        return;\n    }\n\n    return (\n        <Card\n            className='NewsCard-item'\n            onClick={() => redirectTo(url)}\n            style={{width: 300}}\n            cover={\n                <LazyLoad height={190} once>\n                    <img\n                        className='NewsCard-image'\n                        alt={urlToImage || 'no_image'}\n                        src={urlToImage || '/images/no_image.jpg'}\n                    />\n                </LazyLoad>\n            }\n        >\n            <Meta\n                avatar={<Avatar>{sourceName.slice(0, 1)}</Avatar>}\n                title={sourceName ?? ''}\n                description={publishedAt ? moment(publishedAt).format('YYYY-MM-DD h:mm') : null}\n            />\n            <Title level={4} ellipsis={{rows:1, expandable:false}}>{title}</Title>\n            <Paragraph ellipsis={{rows:6, expandable:false}}>{description}</Paragraph>\n        </Card>\n    )\n}\n\nexport default NewsCard\n"]},"metadata":{},"sourceType":"module"}