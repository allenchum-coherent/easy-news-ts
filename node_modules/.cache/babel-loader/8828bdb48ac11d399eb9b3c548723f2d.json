{"ast":null,"code":"var _process$env$REACT_AP;\n\nimport antdEn from 'antd/lib/locale/en_US';\nimport antdAr from 'antd/lib/locale/ar_EG';\nimport { en, ar } from '../locale';\n\nconst formatLanguagePackage = (current, prefix = '', dict = {}) => {\n  let result = { ...dict\n  };\n  Object.entries(current).forEach(([key, value]) => {\n    switch (typeof value) {\n      case 'string':\n        // eslint-disable-next-line no-param-reassign\n        result = { ...result,\n          [`${prefix}${key}`]: value\n        };\n        break;\n\n      case 'object':\n        formatLanguagePackage(value, `${prefix}${key}.`, dict);\n        break;\n\n      default:\n        break;\n    }\n  });\n  return result;\n};\n\nexport const translationDictFromLocale = {\n  en: formatLanguagePackage(en),\n  ar: formatLanguagePackage(ar)\n}; // Ant Design isn't supporting Burmese at the moment\n// FIXME: Maintain a custom locale file for Burmese\n\nexport const antdLocaleMap = {\n  en: antdEn,\n  ar: antdAr\n};\nexport const availableLanguages = ((_process$env$REACT_AP = process.env.REACT_APP_ENABLED_LOCALE) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'en:EN').split(',').map(language => language.split(':'));","map":{"version":3,"sources":["/Users/allenchum/Projects/easy-news-ts/src/constants/language.constants.ts"],"names":["antdEn","antdAr","en","ar","formatLanguagePackage","current","prefix","dict","result","Object","entries","forEach","key","value","translationDictFromLocale","antdLocaleMap","availableLanguages","process","env","REACT_APP_ENABLED_LOCALE","split","map","language"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SACEC,EADF,EACMC,EADN,QAEO,WAFP;;AAIA,MAAMC,qBAAqB,GAAG,CAC5BC,OAD4B,EACXC,MAAM,GAAG,EADE,EACEC,IAAI,GAAG,EADT,KAEzB;AACH,MAAIC,MAAM,GAAG,EAAC,GAAGD;AAAJ,GAAb;AACAE,EAAAA,MAAM,CAACC,OAAP,CAAeL,OAAf,EAAwBM,OAAxB,CAAgC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAChD,YAAQ,OAAOA,KAAf;AACE,WAAK,QAAL;AACE;AACAL,QAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAY,WAAE,GAAEF,MAAO,GAAEM,GAAI,EAAjB,GAAqBC;AAAjC,SAAT;AACA;;AACF,WAAK,QAAL;AACET,QAAAA,qBAAqB,CAACS,KAAD,EAAS,GAAEP,MAAO,GAAEM,GAAI,GAAxB,EAA4BL,IAA5B,CAArB;AACA;;AACF;AACE;AATJ;AAWD,GAZD;AAcA,SAAOC,MAAP;AACD,CAnBD;;AAqBA,OAAO,MAAMM,yBAAyB,GAAG;AACvCZ,EAAAA,EAAE,EAAEE,qBAAqB,CAACF,EAAD,CADc;AAEvCC,EAAAA,EAAE,EAAEC,qBAAqB,CAACD,EAAD;AAFc,CAAlC,C,CAKP;AACA;;AACA,OAAO,MAAMY,aAAa,GAAG;AAC3Bb,EAAAA,EAAE,EAAEF,MADuB;AAE3BG,EAAAA,EAAE,EAAEF;AAFuB,CAAtB;AAKP,OAAO,MAAMe,kBAAkB,GAAG,0BAChCC,OAAO,CAACC,GAAR,CAAYC,wBADoB,yEACQ,OADR,EAEhCC,KAFgC,CAE1B,GAF0B,EAErBC,GAFqB,CAEjBC,QAAQ,IAAIA,QAAQ,CAACF,KAAT,CAAe,GAAf,CAFK,CAA3B","sourcesContent":["import antdEn from 'antd/lib/locale/en_US';\nimport antdAr from 'antd/lib/locale/ar_EG';\nimport {\n  en, ar\n} from '../locale';\n\nconst formatLanguagePackage = (\n  current: object, prefix = '', dict = {}\n) => {\n  let result = {...dict};\n  Object.entries(current).forEach(([key, value]) => {\n    switch (typeof value) {\n      case 'string':\n        // eslint-disable-next-line no-param-reassign\n        result = { ...result,[`${prefix}${key}`]: value};\n        break;\n      case 'object':\n        formatLanguagePackage(value, `${prefix}${key}.`, dict);\n        break;\n      default:\n        break;\n    }\n  });\n\n  return result;\n};\n\nexport const translationDictFromLocale = {\n  en: formatLanguagePackage(en),\n  ar: formatLanguagePackage(ar),\n};\n\n// Ant Design isn't supporting Burmese at the moment\n// FIXME: Maintain a custom locale file for Burmese\nexport const antdLocaleMap = {\n  en: antdEn,\n  ar: antdAr,\n};\n\nexport const availableLanguages = (\n  process.env.REACT_APP_ENABLED_LOCALE ?? 'en:EN'\n).split(',').map(language => language.split(':'));\n"]},"metadata":{},"sourceType":"module"}