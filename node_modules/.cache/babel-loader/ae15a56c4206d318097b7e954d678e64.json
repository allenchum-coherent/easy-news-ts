{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allenchum/Projects/easy-news-ts/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport { fetchNews } from './redux/actions';\nimport Header from './components/Header';\nimport NewsCard from './components/NewsCard';\nimport Loading from './components/Loading';\nimport PageIndicator from './components/PageIndicator';\nimport 'antd/dist/antd.css';\nimport { antdLocaleMap, translationDictFromLocale } from './constants/language.constants';\nimport './App.scss';\n\nconst App = () => {\n  _s();\n\n  const pageSize = 10;\n  const dispatch = useDispatch();\n  const {\n    currPage,\n    showLoading,\n    articles,\n    searchInputText,\n    direction,\n    currentLanguage\n  } = useSelector(({\n    news,\n    language\n  }) => {\n    var _language$currentLang;\n\n    return {\n      currPage: news.currPage,\n      showLoading: news.showLoading,\n      articles: news.articles,\n      searchInputText: news.searchInputText,\n      direction: language.direction,\n      currentLanguage: (_language$currentLang = language.currentLanguage) !== null && _language$currentLang !== void 0 ? _language$currentLang : 'en'\n    };\n  });\n  const currentAntdLocale = antdLocaleMap[currentLanguage];\n\n  const isIncludeText = (str, text) => {\n    return !text || (str === null || str === void 0 ? void 0 : str.toLowerCase().includes(text.toLowerCase()));\n  };\n\n  useEffect(() => {\n    dispatch(fetchNews(pageSize, currPage !== null && currPage !== void 0 ? currPage : 1, currentLanguage));\n  }, [dispatch, pageSize, currPage, currentLanguage]);\n  const renderCards = useMemo(() => {\n    const filteredArticles = articles === null || articles === void 0 ? void 0 : articles.filter(arc => {\n      return isIncludeText(arc.title, searchInputText) || isIncludeText(arc.description, searchInputText);\n    });\n\n    if (showLoading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    } else if (filteredArticles && Array.isArray(filteredArticles) && filteredArticles.length > 0) {\n      return filteredArticles.map((arc, index) => {\n        return /*#__PURE__*/_jsxDEV(NewsCard, {\n          data: arc\n        }, `news-card-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sorry, no news found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n  }, [articles, searchInputText, showLoading]);\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    locale: currentAntdLocale,\n    children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: currentLanguage,\n      messages: translationDictFromLocale[currentLanguage],\n      onError: () => {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        dir: direction,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NewsApp-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contents-container\",\n            children: renderCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PageIndicator, {\n            pageSize: pageSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4mgjCq6ucLi8j2sZ5k3mYbW6xcY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/allenchum/Projects/easy-news-ts/src/App.tsx"],"names":["React","useEffect","useMemo","useDispatch","useSelector","ConfigProvider","IntlProvider","fetchNews","Header","NewsCard","Loading","PageIndicator","antdLocaleMap","translationDictFromLocale","App","pageSize","dispatch","currPage","showLoading","articles","searchInputText","direction","currentLanguage","news","language","currentAntdLocale","isIncludeText","str","text","toLowerCase","includes","renderCards","filteredArticles","filter","arc","title","description","Array","isArray","length","map","index"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport { fetchNews } from './redux/actions'\nimport { AppState } from './redux/reducers';\nimport Header from './components/Header';\nimport NewsCard from './components/NewsCard';\nimport Loading from './components/Loading';\nimport PageIndicator from './components/PageIndicator';\nimport 'antd/dist/antd.css';\nimport { antdLocaleMap , translationDictFromLocale} from './constants/language.constants';\nimport './App.scss';\n\n\nconst App: FC = () => {\n  const pageSize = 10;\n  const dispatch = useDispatch();\n  const { currPage, showLoading, articles, searchInputText, direction, currentLanguage } = useSelector(({ news, language }: AppState) => ({\n    currPage: news.currPage,\n    showLoading: news.showLoading,\n    articles: news.articles,\n    searchInputText: news.searchInputText,\n    direction: language.direction,\n    currentLanguage: language.currentLanguage ?? 'en'\n  }));\n\n  const currentAntdLocale = antdLocaleMap[currentLanguage];\n\n  const isIncludeText = (str: string, text?: string) => {\n    return !text || str?.toLowerCase().includes(text.toLowerCase());\n  }\n\n  useEffect(() => {\n    dispatch(fetchNews(pageSize, currPage ?? 1, currentLanguage));\n  }, [dispatch, pageSize, currPage, currentLanguage])\n\n  const renderCards = useMemo(() => {\n    const filteredArticles = articles?.filter((arc) => {\n      return (isIncludeText(arc.title, searchInputText) || isIncludeText(arc.description, searchInputText));\n    })\n    if (showLoading) {\n      return <Loading />\n    } else if (filteredArticles && Array.isArray(filteredArticles) && filteredArticles.length > 0) {\n      return filteredArticles.map((arc, index) => {\n        return <NewsCard data={arc} key={`news-card-${index}`} />\n      });\n    } else {\n      return <div>Sorry, no news found...</div>\n    }\n  }, [articles, searchInputText, showLoading])\n\n  return (\n    <ConfigProvider locale={currentAntdLocale}>\n      <IntlProvider locale={currentLanguage} messages={translationDictFromLocale[currentLanguage]} onError={()=>{}}>\n        <div className=\"App\" dir={direction}>\n          <div className=\"NewsApp-wrapper\">\n            <Header />\n            <div className=\"contents-container\">\n              {renderCards}\n            </div>\n            <PageIndicator pageSize={pageSize}></PageIndicator>\n          </div>\n        </div>\n      </IntlProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}